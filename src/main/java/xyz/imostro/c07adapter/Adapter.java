package xyz.imostro.c07adapter;

/**
 * 适配器模式 将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。
 *
 * 适配过程：
 *  1. 客户哦那个过目标接口调用适配器的方法对适配器发出请求。
 *  2. 适配器使用被是陪着接口把请求转换成被适配者的一个或多个调用接口。
 *  3. 客户接收到调用的结果，但并未察觉这一切是适配器在起转换作用。
 *
 * 适配的方式：
 *  - “对象”适配器 （利用组合的方式，将请求传送给被适配者）
 *  - “类”适配器 （通过继承被适配者和目标类实现，而不是组合）
 *
 * 作用： 将一个接口转换成另一个接口，以符合客户的期望。
 *
 * 典型的例子: 例如购买了港式的电器回大陆使用的时候，通常会发现一个苦恼的问题，就是香港的电器插座标准和电压标准和内地的是不一样的，
 * 所以我们常常还需要在购买一个转接头，通过转接头把香港的插头转成中国标准的。而这个转接头就是起到了适配的作用。
 *
 * 设计原则：使用对象组合，已修改的接口包装被适配者。
 *
 * 装饰者与适配器的区别
 *  装饰者模式负责的是在原本类的基础上增强，或者说增加一些新的功能，但是接口并不改变
 *  适配器的目的是为了适配一个类，它需要实现适配的接口，把被适配者的方法转换成适配者接口的实现
 */
public class Adapter {
}
